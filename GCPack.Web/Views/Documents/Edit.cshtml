@model GCPack.Model.DocumentModel

@{string AppRoot = System.Configuration.ConfigurationManager.AppSettings["AppRoot"];}

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using GCPack.Model;

<script>
    var timeoutHandle;
    var selectedUsers = [];
    $(document).ready(function () {

        jQuery.validator.methods["date"] = function (value, element) { return true; } 

        // nize uvedene nebude jiz potreba - reseno scriptem lukasuv kousek 15.9.2017
        //$('.btn').click(function () {
        //    $('#Action').val($(this).prop("id"));
        //});

        // LF lukasuv kousek 15.9.2017
        $('.btnAction').click(function () {
            $('#Action').val($(this).prop("id"));
            $('#myForm').submit();
        });

        $("#EffeciencyDate").datepicker({ dateFormat: 'dd/mm/yy' });
        $("#ReviewDate").datepicker({ dateFormat: 'dd/mm/yy' });
        $("#NextReviewDate").datepicker({ dateFormat: 'dd/mm/yy' });
        $("#EndDate").datepicker({ dateFormat: 'dd/mm/yy' });

        //https://stackoverflow.com/questions/494958/how-do-i-localize-the-jquery-ui-datepicker
        $.datepicker.regional['cs'] = {
            closeText: 'Zavřít',
            prevText: '&#x3c;Dříve',
            nextText: 'Později&#x3e;',
            currentText: 'Nyní',
            monthNames: ['leden', 'únor', 'březen', 'duben', 'květen', 'červen', 'červenec', 'srpen',
                'září', 'říjen', 'listopad', 'prosinec'
            ],
            monthNamesShort: ['led', 'úno', 'bře', 'dub', 'kvě', 'čer', 'čvc', 'srp', 'zář', 'říj', 'lis', 'pro'],
            dayNames: ['neděle', 'pondělí', 'úterý', 'středa', 'čtvrtek', 'pátek', 'sobota'],
            dayNamesShort: ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so'],
            dayNamesMin: ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so'],
            weekHeader: 'Týd',
            dateFormat: 'dd/mm/yy',
            firstDay: 1,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ''
        };

        $.datepicker.setDefaults($.datepicker.regional['cs']);


        $("#tabs").tabs();

        $('#filter').keyup(function () {
            GetUsers();
        });

        $('#cancelChanges').click(function () {
            $("#success-alert").fadeTo(1000, 500).slideUp(500, function () {
                $("#success-alert").slideUp(500);
                document.location.href = '/Documents';
            });
        });

        $('#jobPosition').change(function () {
            GetUsers();
        });

        $("#RemoveSelectedUsers").click(function ()
        {
            $("#SelectedUsers :selected").each(function () {
                $(this).remove();
            });
            GetUsers();
        });

        $('#saveDocument, #newVersion, #registerDocument, #revisionNoAction, #revisionChanges').click(function ()
        {
            var form = $(this).closest('form')
            $('.categories option').prop('selected', true);
            $('#SelectedUsers option').prop('selected', true);
        });

        $('#AddUserToList').click(function () {
            $("#FilteredUsers :selected").each(function (index, user) {
                $('#SelectedUsers').append('<option value="' + user.value + '">' + user.text + '</option>');
            });
            
            GetUsers();
        });
        

        GetUsers();

        $('.removeFile').click(function () {
            $('#DeleteFileItems').val($('#DeleteFileItems').val() + $(this).attr('fileId') + ',');
            $(this).closest(".row").remove();
        });

        $('.downloadFile').click(function () {
            
        });

        $('#actionTestModal').click(function () {
            //$('#myModal').modal('show'); 
            $('#myModal').modal(); 
            return false;
        });

        //$('#myModal').modal('show'); 

        $('#stornoModalSave').click(function () {
            quota = $("#quotas").val();
            //alert(quota);
            $('#HelpText').val(quota);
            $('#myForm').submit();

        });

        $('#stornoModalClose').click(function () {
            
        });

        $('#myModal').on('shown', function () {
            $("#quotas").focus();
        })

        $("#myForm").submit(function (event) {

            testik = $('#HelpText').val()
            //alert(testik);
            //event.preventDefault(); je shodnz s return false
            //return false
        });

        

        

        function GetUsers()
        {
            if (timeoutHandle != null) window.clearTimeout(timeoutHandle);

            timeoutHandle = setTimeout(
                function () {
                    selectedUsers = [];
                    $("#SelectedUsers").children().each(function () {
                        selectedUsers.push($(this).val());
                    });
                    $('#FilteredUsers').empty();

                    var AllPath = AppRoot + "/user/getUsers";
                    //alert(AllPath);

                    $.getJSON(AppRoot +"/user/getUsers", { name: $('#filter').val(), jobPositionId: $('#jobPosition').val(), preservedUsers: selectedUsers.join(',') })
                        .done(function (users) {

                            for (var user in users)
                            {
                                $('#FilteredUsers').append($('<option>', {
                                    value: users[user].ID,
                                    text: users[user].LastName + ' ' + users[user].FirstName 
                                }));
                            }
                            
                        })
                        .fail(function (jqxhr, textStatus, error) {
                            var err = textStatus + ", " + error;
                            console.log("Request Failed: " + err);
                        });


                },
                500);
        }
    });

</script>


<style>
    .row {
        margin-bottom:10px;
    }
    .categories {
        width:100%;
    }

</style>
<h2>@ViewBag.Title</h2>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div>
    @using (Html.BeginForm("Save", "Documents", FormMethod.Post, new { @enctype = "multipart/form-data", id = "myForm" }))
    {
        <input type="hidden" name="Action" id="Action" />
        <input type="hidden" name="StateID" id="StateID" value="@Model.StateID"/>
        <input type="hidden" name="ID" value="@Model.ID" />
        <input type="hidden" name="type" value="@ViewBag.Type" />
        <input type="hidden" name="DeleteFileItems" id="DeleteFileItems" />
        <input type="hidden" name="ParentID" value="@Model.ParentID"/>
        <input type="hidden" name="HelpText"  id="HelpText" />

        <div id="success-alert" class="alert alert-danger" style="display:none">Tento dokument se neuložil</div>
        <div id="tabs">
            <ul>
                <li><a href="#tabs-1">Dokument</a></li>
                <li><a href="#tabs-3">Soubory</a></li>
                <li><a href="#tabs-4">Přiřazené osoby k dokumentu</a></li>
                <li><a href="#tabs-5">Kategorie</a></li>
                @if (Model.AllUsers > 0)
                {
                    <li><a href="#tabs-6">Záznamy o seznámení</a></li>
                }
            </ul>
            @if (Model.AllUsers > 0)
            {
                <div id="tabs-6">
                    
                    @*<table class="table" style="margin-top:20px">
                        <tr>
                            <th>
                                Jméno
                            </th>
                            <th>
                                Příjmení
                                
                            </th>
                            <th>
                                Datum seznámení
                            </th>
                        </tr>
                    </table>*@


                    
                    @{ bool existAsUserReader = false; }
                    @if (Model.UsersInDocument != null && Model.UsersInDocument.AllUsers != null)
                    {
                        foreach (var item in @Model.UsersInDocument.AllUsers.OrderBy(au => au.LastName).Select(au => au))
                        {
                            existAsUserReader = false;
                            if (Model.UsersInDocument.UsersRead != null)
                            {

                                foreach (var itemUR in @Model.UsersInDocument.UsersRead)
                                {
                                    if (itemUR.User.ID == item.ID)
                                    {
                                        existAsUserReader = true;

                                        <div class="row">
                                            <div class="col-md-2">
                                                @itemUR.User.FirstName
                                            </div>
                                            <div class="col-md-2">
                                                @itemUR.User.LastName
                                            </div>
                                            <div class="col-md-2">
                                                @itemUR.DateRead.ToShortDateString()
                                            </div>
                                        </div>
                                    }


                                }

                            }
                            if (existAsUserReader == false)
                            {

                                <div class="row">
                                    <div class="col-md-2">
                                        @item.FirstName
                                    </div>
                                    <div class="col-md-2">
                                        @item.LastName
                                    </div>
                                    <div class="col-md-2">

                                    </div>
                                </div>
                            }

                        }
                    }
                 </div>
                }

                <div id="tabs-1">
                    <div class="row">
                        <label class="control-label col-md-2" for="Title">Název</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Název dokumentu" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger", required = "required" })
                        </div>
                        <label class="control-label col-md-2" for="EffeciencyDate">Datum účinnosti</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.EffeciencyDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EffeciencyDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <label class="control-label col-md-2" for="DocumentAdminType">Číslo dokumentu</label>
                        <div class="col-md-4">
                            @Html.HiddenFor(model => model.DocumentNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Číslo dokumentu" } })
                            @Model.DocumentNumber
                            @Html.HiddenFor(model => model.IssueNumber, new { htmlAttributes = new {  @class = "form-control", @placeholder = "Číslo vydání" } })
                            <strong>  (Vydání  </strong> @Model.IssueNumber <strong> ) </strong>                          
                            @Html.ValidationMessageFor(model => model.DocumentNumber, "", new { @class = "text-danger" })
                        </div>
                        <label class="control-label col-md-2" for="ReviewDate">Datum revize</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ReviewDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReviewDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <label class="control-label col-md-2" for="Revision">Typ revize</label>
                        <div class="col-md-4">
                            @Model.Revision
                            <input type="hidden" name="Revision" value="@Model.Revision" />
                        </div>
                        <label class="control-label col-md-2" for="NextReviewDate">Datum další revize</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.NextReviewDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NextReviewDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <label class="control-label col-md-2" for="DocumentTypeID">Typ dokumentu</label>
                        <div class="col-md-4">
                            <input type="hidden" name="DocumentTypeID" value="@Model.DocumentTypeID" />
                            @Html.DropDownListFor(m => m.DocumentTypeID, new SelectList(ViewBag.DocumentTypes, "ID", "Value"), new { disabled = true })
                        </div>
                        <label class="control-label col-md-2" for="EndDate">Konec platnosti</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="row">
                        <label class="control-label col-md-2" for="DocumentTypeID">Stav dokumentu</label>
                        <div class="col-md-10">
                            @Model.DocumentStateName

                        </div>
                    </div>

                    <div class="row">
                        <label class="control-label col-md-2" for="DocumentAdminType">Typ správce dokumentu</label>
                        <div class="col-md-10">
                            @if (ViewBag.TypeModel.AdministratorID != 0)
                            {
                                <p>Z typu dokumentu: @Model.DocumentAdministrator</p>

                            }
                            else
                            {
                                <p>Vybraná osoba &nbsp;</p>
                                @Html.DropDownListFor(m => m.AdministratorID, new SelectList(ViewBag.Administrators, "ID", "Value"));
                            }
                            <br />

                        </div>
                    </div>
                    <div class="row">
                        <label class="control-label col-md-2" for="Title">Anotace</label>
                        <div class="col-md-6">
                            @Html.TextAreaFor(model => model.Annotation, new { @class = "form-control annotationArea", @placeholder = "Poznámka k dokumentu" })
                            @Html.ValidationMessageFor(model => model.Annotation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div id="tabs-3">

                    <div class="row">
                        <label class="control-label col-md-4" for="Title">Přiřazené soubory k dokumentu</label>
                    </div>

                    @foreach (var item in @Model.FileItems)
                {
                        <div class="row">
                            <div class="col-md-2">
                                @item.Name
                            </div>
                            <div class="col-md-4">
                                <a href="#" class="btn btn-default btn-sm removeFile" fileId="@item.ID">
                                    <span class="glyphicon glyphicon-remove"></span> Smazat
                                </a>
                                <a href="@System.Configuration.ConfigurationManager.AppSettings["AppRoot"]/Documents/GetFile?FileID=@item.ID" class="btn btn-default btn-sm downloadFile" fileId="@item.ID">
                                    <span class="glyphicon glyphicon-download"></span> Stáhnout soubor
                                </a>
                            </div>
                        </div>
                    }


                    <div class="row" style="margin-top:30px">
                        <label class="control-label col-md-4" for="Title">Přidat nové soubory</label>
                    </div>
                    <div class="row">
                        <div class="col-md-10">
                            <input type="file" name="file1" id="file1" value="Přidat soubor" class="btn btn-default" />
                            <br />
                            <input type="file" name="file2" id="file2" value="Přidat soubor" class="btn btn-default" />
                            <br />
                            <input type="file" name="file3" id="file3" value="Přidat soubor" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                <script>
                    $(document).ready(function () {
                        $('#addProjects').click(
                            function () {
                                ChangeItems('#AllProjects', '#SelectedProjects');
                            });
                        $('#removeProjects').click(
                            function () {
                                ChangeItems('#SelectedProjects', '#AllProjects');
                            });
                        $('#addDivisions').click(
                            function () {
                                ChangeItems('#AllDivisions', '#SelectedDivisions');
                            });
                        $('#removeDivisions').click(
                            function () {
                                ChangeItems('#SelectedDivisions', '#AllDivisions');
                            });

                        $('#addAppSystems').click(
                            function () {
                                ChangeItems('#AllAppSystems', '#SelectedAppSystems');
                            });
                        $('#removeAppSystems').click(
                            function () {
                                ChangeItems('#SelectedAppSystems', '#AllAppSystems');
                            });

                        $('#addWorkplaces').click(
                            function () {
                                ChangeItems('#AllWorkplaces', '#SelectedWorkplaces');
                            });
                        $('#removeWorkplaces').click(
                            function () {
                                ChangeItems('#SelectedWorkplaces', '#AllWorkplaces');
                            });

                        $('#divisionsFilter').keyup(function () {
                            filterCodeList($(this).val(), '#AllDivisions');
                        });

                        $('#projectsFilter').keyup(function () {
                            filterCodeList($(this).val(), '#AllProjects');
                        });

                        $('#appSystemsFilter').keyup(function () {
                            filterCodeList($(this).val(), '#AllAppSystems');
                        });

                        $('#workplacesFilter').keyup(function () {
                            filterCodeList($(this).val(), '#AllWorkplaces');
                        });


                        function filterCodeList(filter, codeList) {
                            $(codeList + ' option').each(function () {
                                if ($(this).text().toLowerCase().indexOf(filter.toLowerCase()) > -1) {
                                    $(this).show();
                                } else {
                                    $(this).hide();
                                }
                            })
                        };

                    });

                    function ChangeItems(source, target) {
                        $(source + " :selected").each(function (index, item) {
                            $(target).append('<option value="' + item.value + '">' + item.text + '</option>');
                            $(item).remove();
                        });

                        SortItems(source);
                        SortItems(target);
                    }

                    function SortItems(source) {
                        var selectList = $(source + ' option');
                        var sortSelectList = selectList.sort(function (a, b) {
                            return a.text.localeCompare(b.text);
                        });
                        $(source).html(sortSelectList);
                    }


                </script>


                <div id="tabs-5">
                    <div class="row">
                        <div class="col-md-4">
                            <b>Projekty</b><br />
                            <input type="text" id="projectsFilter" />
                            <select multiple name="AllProjects" id="AllProjects" class="categories">
                                @if (Model.SelectedProjectsID != null)
                                {
                                    foreach (ProjectModel project in ((ICollection<ProjectModel>)ViewBag.Projects).Where(p => !Model.SelectedProjectsID.Contains(p.ID)).Select(p => p))
                                    {
                                        <option value="@project.ID">@project.Name</option>
                                    }
                                }
                                else
                                {
                                    foreach (ProjectModel project in ((ICollection<ProjectModel>)ViewBag.Projects).Select(p => p))
                                    {
                                        <option value="@project.ID">@project.Name</option>
                                    }
                                }
                            </select>
                        </div>

                        <div class="col-md-2">
                            <input type="button" id="addProjects" value=">" /><br />
                            <input type="button" id="removeProjects" value="<" />
                        </div>


                        <div class="col-md-4">
                            <b>Vybrané projekty</b><br />
                            <select multiple name="SelectedProjectsID" id="SelectedProjects" class="categories">
                                @if (Model.SelectedProjectsID != null)
                                {
                                    foreach (ProjectModel project in ((ICollection<ProjectModel>)ViewBag.Projects).Where(p => Model.SelectedProjectsID.Contains(p.ID)).Select(p => p))
                                    {
                                        <option value="@project.ID">@project.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-4">
                            <b>Střediska</b><br />
                            <input type="text" id="divisionsFilter" />
                            <select multiple name="AllDivisions" id="AllDivisions" class="categories">
                                @if (Model.SelectedDivisionsID != null)
                                {
                                    foreach (DivisionModel division in ((ICollection<DivisionModel>)ViewBag.Divisions).Where(p => !Model.SelectedDivisionsID.Contains(p.ID)).Select(p => p))
                                    {
                                        <option value="@division.ID">@division.Name</option>
                                    }
                                }
                                else
                                {
                                    foreach (DivisionModel division in ((ICollection<DivisionModel>)ViewBag.Divisions).Select(p => p))
                                    {
                                        <option value="@division.ID">@division.Name</option>
                                    }
                                }
                            </select>
                        </div>

                        <div class="col-md-2">
                            <input type="button" id="addDivisions" value=">" /><br />
                            <input type="button" id="removeDivisions" value="<" />
                        </div>


                        <div class="col-md-4">
                            <b>Vybraná střediska</b><br />
                            <select multiple name="SelectedDivisionsID" id="SelectedDivisions" class="categories">
                                @if (Model.SelectedDivisionsID != null)
                                {
                                    foreach (DivisionModel division in ((ICollection<DivisionModel>)ViewBag.Divisions).Where(p => Model.SelectedDivisionsID.Contains(p.ID)).Select(p => p))
                                    {
                                        <option value="@division.ID">@division.Name</option>
                                    }
                                }
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <b>Systémy</b><br />
                            <input type="text" id="appSystemsFilter" />
                            <select multiple name="AllAppSystems" id="AllAppSystems" class="categories">
                                @if (Model.SelectedAppSystemsID != null)
                                {
                                    foreach (AppSystemModel appSystem in ((ICollection<AppSystemModel>)ViewBag.AppSystems).Where(p => !Model.SelectedAppSystemsID.Contains(p.ID)).Select(aps => aps))
                                    {
                                        <option value="@appSystem.ID">@appSystem.Name</option>
                                    }
                                }
                                else
                                {
                                    foreach (AppSystemModel appSystem in ((ICollection<AppSystemModel>)ViewBag.AppSystems).Select(aps => aps))
                                    {
                                        <option value="@appSystem.ID">@appSystem.Name</option>
                                    }
                                }

                            </select>
                        </div>

                        <div class="col-md-2">
                            <input type="button" id="addAppSystems" value=">" /><br />
                            <input type="button" id="removeAppSystems" value="<" />
                        </div>


                        <div class="col-md-4">
                            <b>Vybrané systémy</b><br />
                            <select multiple name="SelectedAppSystemsID" id="SelectedAppSystems" class="categories">
                                @if (Model.SelectedAppSystemsID != null)
                                {
                                    foreach (AppSystemModel appSystem in ((ICollection<AppSystemModel>)ViewBag.AppSystems).Where(p => Model.SelectedAppSystemsID.Contains(p.ID)).Select(p => p))
                                    {
                                        <option value="@appSystem.ID">@appSystem.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <b>Pracovní místa</b><br />
                            <input type="text" id="workplacesFilter" />
                            <select multiple name="AllWorkplaces" id="AllWorkplaces" class="categories">
                                @if (Model.SelectedWorkplacesID != null)
                                {
                                    foreach (WorkplaceModel workplace in ((ICollection<WorkplaceModel>)ViewBag.Workplaces).Where(p => !Model.SelectedWorkplacesID.Contains(p.ID)).Select(aps => aps))
                                    {
                                        <option value="@workplace.ID"> @workplace.Name</option>
                                    }
                                }
                                else
                                {
                                    foreach (WorkplaceModel workplace in ((ICollection<WorkplaceModel>)ViewBag.Workplaces).Select(aps => aps))
                                    {
                                        <option value="@workplace.ID">@workplace.Name</option>
                                    }

                                }
                            </select>
                        </div>

                        <div class="col-md-2">

                            <input type="button" id="addWorkplaces" value=">" /><br />
                            <input type="button" id="removeWorkplaces" value="<" />
                        </div>


                        <div class="col-md-4">
                            <b>Vybrané pracovní místa</b><br />
                            <select multiple name="SelectedWorkplacesID" id="SelectedWorkplaces" class="categories">
                                @if (Model.SelectedWorkplacesID != null)
                                {
                                    foreach (WorkplaceModel workplace in ((ICollection<WorkplaceModel>)ViewBag.Workplaces).Where(p => Model.SelectedWorkplacesID.Contains(p.ID)).Select(p => p))
                                    {
                                        <option value="@workplace.ID"> @workplace.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>





                </div>
                <div id="tabs-4">
                    <div class="row">
                        <div class="col-md-10">
                            <div style="margin-bottom:20px">

                                <div class="col-md-2">
                                    <b>Pracovní pozice</b>
                                </div>
                                <div class="col-md-10">
                                    @foreach (GCPack.Model.JobPositionModel job in ViewBag.JobPositions)
                                    {
                                        string isChecked = (Model.JobPositionIDs != null && Model.JobPositionIDs.Contains(job.ID)) ? "checked" : "";
                                        <div>
                                            <input type="checkbox" name="JobPositionIDs" value="@job.ID" @isChecked /> @job.Name
                                        </div>
                                    }
                                </div>


                                <b>Přiřazení uživatelé k dokumentu</b><br />
                                <select multiple name="SelectedUsers" id="SelectedUsers" class="selectBoxes">
                                    @if (@Model.Users != null)
                                    {
                                        foreach (var item in @Model.Users)
                                        {
                                            <option value="@item.ID">@item.LastName  @item.FirstName</option>
                                        }
                                    }
                                </select>
                                <br />
                                <input type="button" value="Odebrat osoby z dokumentu" id="RemoveSelectedUsers" class="btn btn-default" />

                            </div>
                            <div>

                                <div class="ui-widget">
                                    <label for="filter">Filtr: </label>
                                    <input id="filter">
                                    <label for="jobPosition">Pracovní pozice: </label>
                                    <select id="jobPosition">
                                        <option value="0">Všechny</option>
                                        @foreach (var item in ViewBag.JobPositions)
                                        {
                                            <option value="@item.ID">@item.Name</option>
                                        }
                                    </select>
                                </div>

                                <select multiple name="FilteredUsers" id="FilteredUsers" class="selectBoxes"></select>
                                <br />
                                <input type="button" value="Přiřadit osoby k dokumentu" id="AddUserToList" class="btn btn-default" />
                            </div>

                        </div>
                    </div>
                </div>
            </div>
                <input type="hidden" name="ID" id="ID" />
                <div style="clear:both;margin-bottom:10px"></div>
                <div class="row">
                    <div class="col-md-12" >
                        <nav class="navbar navbar-btn">
                            <div class="container-fluid">
                                <ul class="nav navbar-nav">
                                    <li style="padding-right:5px">
                                        <button class="btn btn-danger navbar-btn btnAction" id="cancelChanges">Zpět</button>
                                    </li>
                                    @if (Model.DocumentStateCode == "New")
                                    {
                                        <li style="padding-right:5px">
                                            <button class="btn btn-primary navbar-btn btnAction" id="saveDocument">Uložit</button>
                                        </li>
                                        <li style="padding-right:5px">
                                            <button class="btn btn-primary navbar-btn btnAction" id="registerDocument">Zaevidovat</button>
                                        </li>

                                    }
                                    else if (Model.DocumentStateCode == "Registered")
                                    {

                                        if (Model.Revision == "P")
                                        {
                                            <li style="padding-right:5px">
                                                <button class="btn btn-primary navbar-btn btnAction" id="newVersion">Nové vydání</button>
                                            </li>
                                            <li style="padding-right:5px">
                                                <button class="btn btn-primary navbar-btn dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Přezkoumání<span class="caret"></span></button>
                                                <ul class="dropdown-menu">
                                                    <li style="padding-right:5px">
                                                        <a href="#" class="btnAction" id="reviewNoAction"> Platný ve stávající formě</a>
                                                        @*<button class="btnAction" id="revisionNoAction">Platný ve stávající formě</button>*@
                                                    </li>
                                                    <li style="padding-right:5px">
                                                        <a href="#" class="btnAction" id="reviewNecessaryChanges"> Nutná změna</a>
                                                        @*<button class="btn  btn-primary btnAction" id="revisionChanges">Nutná změna</button>*@
                                                    </li>
                                                </ul>
                                            </li>
                                        }
                                    }
                                    @if (Model.DocumentStateCode == "New" | Model.DocumentStateCode == "Registered")
                                    {
                                        <li style="padding-right:5px">
                                            <button class="btn btn-primary navbar-btn btnAction" id="stornoDocument">Storno</button>
                                        </li>
                                      

                                    }

                                    @if (Model.DocumentStateCode == "Storno" | Model.DocumentStateCode == "Registered")
                                    {

                                        if (Model.Archived != true)
                                        {
                                            <li style="padding-right:5px">
                                                <button class="btn btn-primary navbar-btn btnAction" id="archivDocument">Archiv</button>
                                            </li>
                                        }
                                        else
                                        {
                                            <li style="padding-right:5px">
                                                <button class="btn btn-primary navbar-btn btnAction" id="deArchivDocument">Dearchivace</button>
                                            </li>
                                        }

                                    }
                                    
                                    <li style="padding-right:5px">
                                        <button class="btn btn-primary navbar-btn" id="actionTestModal">Test modal</button>
                                    </li>

                                    

                                    
                                </ul>
                            </div>
                        </nav>

                        @*<input type="button" value="Zrušit změny" id="cancelChanges" class="btn btn-danger" />
                        
                        @if (Model.DocumentStateCode == "New")
                        {
                            <input type="submit" value="Uložit" id="saveDocument" class="btn btn-success" />
                            <input type="submit" value="Zaevidovat" id="registerDocument" class="btn btn-success" />
                        }
                        else if (Model.DocumentStateCode == "Registered")
                        {
                            
                            if (Model.Revision == "P")
                            {
                                <input type="submit" value="Nové vydání" id="newVersion" class="btn btn-success" />
                                <input type="submit" value="Platný ve stávající formě" id="revisionNoAction" class="btn btn-success" />
                                <input type="submit" value="Nutná změna" id="revisionChanges" class="btn btn-success" />
                            }
                        }

                       
                        <input type="submit" value="Tisk dokumentu" id="print" class="btn btn-success" />*@
                       
                    </div>
                </div>
                }


</div>

<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Confirmation</h4>
            </div>
            <div class="modal-body">
                <p>Do you want to save changes you made to document before closing?</p>
                <p class="text-warning"><small>If you don't save, your changes will be lost.</small></p>
                <input type="text" name="quota" class="form-control" id="quotas" value="ahoj" maxlength="20">
            </div>
            <div class="modal-footer">
                <button ID="stornoModalClose" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button ID="stornoModalSave" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


