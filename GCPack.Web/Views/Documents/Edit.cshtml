@model GCPack.Model.DocumentModel


@{string AppRoot = System.Configuration.ConfigurationManager.AppSettings["AppRoot"];}

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using GCPack.Web.Filter;
@using GCPack.Model;
@using GCPack;

<style>
    /*vše object GCPack.Web/Content/Site.css*/
</style>

@*script pro tlačítka akcí, modální okno, datapicker a...*@
<script>

    var selectedUsers = [];
    var timeoutHandle;
    $(document).ready(function () {


        $("#AllIssue").delegate("tr.dataRowClick", "click", function () {
            window.location.href = '/Documents/Details/?documentId=' + $(this).attr('value');
        });


        GetDocuments_Edit();

        jQuery.validator.methods["date"] = function (value, element) { return true; }

        // LF lukasuv kousek 15.9.2017
        // co se děje na tlačítka (všechny akce nad doc)
        // tlačítka nesmí být typu submit - ten je až zde v JS
        $('.btnAction').click(function () {

            var myForm1 = $("#Title");
            myForm1.validate();
            if (!myForm1.valid())
            {
                alert('Zadejte název dokumentu.');
                return false;
            }


            $('#Action').val($(this).prop("id"));
            $('form').prop('action', $(this).prop("id"));

            var form = $(this).closest('form');
            $('.categories option').prop('selected', true);
            $('#SelectedUsers option').prop('selected', true);

            // pro nutnou změnu se objeví dialogové (modální ) okno pro zadání důvodu
            if ($(this).prop("id") == "reviewNecessaryChange") {

                $("#myModalP1").html("");
                $("#myModalP2").html("");
                $("#myModalTitle").html("Nutná změna");
                $("#myModalComment").attr("placeholder", "Zde zadejte text důvodu změny.");
                $('#myModal').modal();
                //zastavi submit
                return false;
            }

            if ($(this).prop("id") == "stornoDocument") {

                $("#myModalP1").html("");
                $("#myModalP2").html("");
                $("#myModalTitle").html("Storno");
                $("#myModalComment").attr("placeholder", "Zde zadejte text důvodu storna.");
                $('#myModal').modal();

                //zastavi submit
                return false;
            }
            //1

            //if ($(this).prop("id") == "cancelChanges") {
            //    $('#MyForm').validate().cancelSubmit = true;
            //}


            $('#myForm').submit();
        });

        $("#EffeciencyDate").datepicker({ dateFormat: 'dd/mm/yy' });
        $("#ReviewDate").datepicker({ dateFormat: 'dd/mm/yy' });
        $("#NextReviewDate").datepicker({ dateFormat: 'dd/mm/yy' });
        $("#EndDate").datepicker({ dateFormat: 'dd/mm/yy' });

        //https://stackoverflow.com/questions/494958/how-do-i-localize-the-jquery-ui-datepicker
        $.datepicker.regional['cs'] = {
            closeText: 'Zavřít',
            prevText: '&#x3c;Dříve',
            nextText: 'Později&#x3e;',
            currentText: 'Nyní',
            monthNames: ['leden', 'únor', 'březen', 'duben', 'květen', 'červen', 'červenec', 'srpen',
                'září', 'říjen', 'listopad', 'prosinec'
            ],
            monthNamesShort: ['led', 'úno', 'bře', 'dub', 'kvě', 'čer', 'čvc', 'srp', 'zář', 'říj', 'lis', 'pro'],
            dayNames: ['neděle', 'pondělí', 'úterý', 'středa', 'čtvrtek', 'pátek', 'sobota'],
            dayNamesShort: ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so'],
            dayNamesMin: ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so'],
            weekHeader: 'Týd',
            dateFormat: 'dd/mm/yy',
            firstDay: 1,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ''
        };

        $.datepicker.setDefaults($.datepicker.regional['cs']);

        // https://css-tricks.com/forums/topic/jquery-ui-tab-styling-cant-override-default-styling-for-a-specific-id/
        $("#tabs").tabs();

        //$('#filter').keyup(function () {
        //    GetUsers();
        //});

        // TODO: LF 10.11.2017 vyhledove rozchodit pro vsechny akce zobrazeni hlaseni o provedeni akce Ulozit, zaevidoval jste a podobne
        // nize uvedeny script je urcen k zobrazeni hlasnei o provedene akci v tomto pripade cancel
        // nicmene nefunguje porotoze nemame osetrene doplneni AppRoot pred /Documents
        //$('#cancelChanges').click(function () {
        //    $("#success-alert").fadeTo(1000, 500).slideUp(500, function () {
        //        $("#success-alert").slideUp(500);
        //        document.location.href = '/Documents';
        //    });
        //});


        $('.removeFile').click(function () {
            $('#DeleteFileItems').val($('#DeleteFileItems').val() + $(this).attr('fileId') + ',');
            $(this).closest(".row").remove();
        });

        $('.downloadFile').click(function () {

        });

        $('#actionTestModal').click(function () {
            //$('#myModal').modal('show');
            $('#myModal').modal();
            //zastavi submit
            return false;
        });


        $('#myModalContinue').click(function () {
            comment = $("#myModalComment").val();
            //alert(quota);
            $('#HelpText').val(comment);
            $('#myForm').submit();

        });


        $('#myModal').on('shown', function () {
            $("#myModalComment").focus();
        })


    });

</script>
@*script pro kategorie viz tab 5*@
<script>

    var GetUsersJob_orderBy = 'GetUsersJob_JobPostionA';
    var GetReadConfirms_orderBy = 'GetReadConfirms_JobPostionA';
    var GetDocuments_Edit_orderBy = 'NumberA';

    $(document).ready(function () {

        $('.GetReadConfirms_SortBy').click(
            function () {
                GetReadConfirms_orderBy = $(this).attr('sortBy');
                //alert("sortby");
                //SetSelectedColumn($(this), GetReadConfirms);

                GetReadConfirms();
            }
        );

        $('.GetUsersJob_SortBy').click(
            function () {
                GetUsersJob_orderBy = $(this).attr('sortBy');
                //alert("sortby");
                GetUsersJob();
                //SetSelectedColumn($(this), GetUsersJob);
            }
        );

        $('.GetDocuments_Edit_SortBy').click(
            function () {

                GetDocuments_Edit_orderBy = $(this).attr('sortBy');
                GetDocuments_Edit();
            }

        );


        if ($('#DocumentStateCode').val() == "New") {
            GetUsersJob();

        } else {
            GetReadConfirms();
        }

        $('#cancelChanges').click(
            function () {
                //window.location.href = '/Documents/Index/'; - kdyz bych pouzil takto tak se nenastavi zpravne filtry
               location.href = '/Documents/CancelChanges' ;
            });
        $('#addUsers').click(
            function () {
                ChangeItems('#AllUsers', '#SelectedUsers');
                GetUsersJob();
            });
        $('#removeUsers').click(
            function () {
                ChangeItems('#SelectedUsers', '#AllUsers');
                GetUsersJob();
            });


        $('#addJobPositions').click(
            function () {
                ChangeItems('#AllJobPositions', '#JobPositionIDs');
                GetUsersJob();
            });
        $('#removeJobPositions').click(
            function () {
                ChangeItems('#JobPositionIDs', '#AllJobPositions');
                GetUsersJob();
            });

        $('#addProjects').click(
            function () {
                ChangeItems('#AllProjects', '#SelectedProjects');
            });
        $('#removeProjects').click(
            function () {
                ChangeItems('#SelectedProjects', '#AllProjects');
            });
        $('#addDivisions').click(
            function () {
                ChangeItems('#AllDivisions', '#SelectedDivisions');
            });
        $('#removeDivisions').click(
            function () {
                ChangeItems('#SelectedDivisions', '#AllDivisions');
            });

        $('#addAppSystems').click(
            function () {
                ChangeItems('#AllAppSystems', '#SelectedAppSystems');
            });
        $('#removeAppSystems').click(
            function () {
                ChangeItems('#SelectedAppSystems', '#AllAppSystems');
            });

        $('#addWorkplaces').click(
            function () {
                ChangeItems('#AllWorkplaces', '#SelectedWorkplaces');
            });
        $('#removeWorkplaces').click(
            function () {
                ChangeItems('#SelectedWorkplaces', '#AllWorkplaces');
            });

        $('#JobPositionFilter').keyup(function () {
            filterCodeList($(this).val(), '#AllJobPositions');
        });

        $('#divisionsFilter').keyup(function () {
            filterCodeList($(this).val(), '#AllDivisions');
        });

        $('#projectsFilter').keyup(function () {
            filterCodeList($(this).val(), '#AllProjects');
        });

        $('#appSystemsFilter').keyup(function () {
            filterCodeList($(this).val(), '#AllAppSystems');
        });

        $('#workplacesFilter').keyup(function () {
            filterCodeList($(this).val(), '#AllWorkplaces');
        });


        function filterCodeList(filter, codeList) {

        //    var text = $("#selectA option[value='" + $(this).val() + "']").text().split(' ');
        //    text = text[1];    // this is the tricky part...
        //    $("#selectB option").attr("disabled", "disabled").hide();


        // TODO> LF 15.11.2017 hide nefunguje na IE nutno predelat na json
            $(codeList + ' option').each(function () {
                if ($(this).text().toLowerCase().indexOf(filter.toLowerCase()) > -1) {
                    $(this).show();
                    //$(this).removeAttr("disabled").show();

                } else {
                    //$(this).css({ "display": "none" });
                    $(this).hide();
                    //$(this).attr("disabled", "disabled").hide();
                    //$(this).css({ "display": "" });
                    //$(this).show();
                }
            })
        };

    });

    //function ChangeItems(source, target) {
    //    $(source + " :selected").each(function (index, item) {
    //        $(target).append('<option value="' + item.value + '">' + item.text + '</option>');
    //        $(item).remove();
    //    });

    //    SortItems(source);
    //    SortItems(target);
    //}

    //function SortItems(source) {
    //    var selectList = $(source + ' option');
    //    var sortSelectList = selectList.sort(function (a, b) {
    //        return a.text.localeCompare(b.text);
    //    });
    //    $(source).html(sortSelectList);
    //}


</script>


<h2>@ViewBag.Title</h2>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div>
    @using (Html.BeginForm("", "Documents", FormMethod.Post, new { @enctype = "multipart/form-data", id = "myForm" }))
    {
        <input type="hidden" name="Action" id="Action" />
        <input type="hidden" name="StateID" id="StateID" value="@Model.StateID" />
        <input type="hidden" name="DocumentStateCode" id="DocumentStateCode" value="@Model.DocumentStateCode" />
        <input type="hidden" name="ID" id="ID" value="@Model.ID" />
        <input type="hidden" name="type" id="type" value="@ViewBag.Type" />
        <input type="hidden" name="DeleteFileItems" id="DeleteFileItems" />
        <input type="hidden" name="ParentID" id="ParentID" value="@Model.ParentID" />
        <input type="hidden" name="AuthorID" id="AuthorID" value="@Model.AuthorID" />
        <input type="hidden" name="MainID" id="MainID" value="@Model.MainID" />

        <input type="hidden" name="HelpText" id="HelpText" />

        <div id="success-alert" class="alert alert-danger" style="display:none">Tento dokument se neuložil</div>
        <div id="tabs">
            <ul>
                <li><a href="#tabs-1">Dokument</a></li>
                <li><a href="#tabs-3">Soubory</a></li>
                <li><a href="#tabs-4">Rozdělovník</a></li>
                <li><a href="#tabs-5">Kategorie</a></li>

                @if (Model.ReviewNecessaryChangeComment != "")
                {
                    <li><a href="#tabs-7">Nutné změny</a></li>
                }
                <li><a href="#tabs-8">Změnový list</a></li>
            </ul>

            @* kosilka  rizeneho dokumentu  *@
            <div id="tabs-1">
                <div class="row">
                    <label class="control-label col-md-2" for="Title">Název</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Název dokumentu" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger", required = "required" })
                    </div>
                    <label class="control-label col-md-2 modra" for="DocumentTypeID">Stav dokumentu</label>
                    <div class="col-md-4 modra">
                        @Model.DocumentStateName

                    </div>


                </div>
                @if (Model.StateID == 3)
                {
                    <div class="row">
                        <div class="col-md-8 ">
                        </div>
                        <div class="col-md-4 modra">

                            <p class="modra">Důvod: @Model.StornoReason</p>

                            @*@Html.HiddenFor(model => model.StornoReason, new { htmlAttributes = new { @class = "form-control", @placeholder = "oduvodnění Storna" } })*@

                        </div>
                    </div>
                }
                <div class="row">
                    <label class="control-label col-md-2" for="DocumentAdminType">Číslo dokumentu</label>
                    <div class="col-md-4">
                        @Html.HiddenFor(model => model.DocumentNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Číslo dokumentu" } })
                        @Model.DocumentNumber
                        @Html.HiddenFor(model => model.IssueNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Číslo vydání" } })
                        <strong>  (v. </strong> @Model.IssueNumber <strong> ) </strong>
                        @Html.ValidationMessageFor(model => model.DocumentNumber, "", new { @class = "text-danger" })
                    </div>
                    <label class="control-label col-md-2" for="EffeciencyDate">Datum účinnosti</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.EffeciencyDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EffeciencyDate, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="row">
                    <label class="control-label col-md-2" for="Revision">Typ revize</label>
                    <div class="col-md-4">
                        @Model.Revision
                        <input type="hidden" name="Revision" value="@Model.Revision" />
                    </div>
                    <label class="control-label col-md-2" for="ReviewDate">Datum revize</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ReviewDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReviewDate, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="row">
                    <label class="control-label col-md-2" for="DocumentTypeID">Typ dokumentu</label>
                    <div class="col-md-4">
                        <input type="hidden" name="DocumentTypeID" value="@Model.DocumentTypeID" />
                        @Html.DropDownListFor(m => m.DocumentTypeID, new SelectList(ViewBag.DocumentTypes, "ID", "Value"), new { disabled = true })
                    </div>
                    <label class="control-label col-md-2" for="NextReviewDate">Datum další revize</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.NextReviewDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NextReviewDate, "", new { @class = "text-danger" })
                    </div>


                </div>

                @*<div class="row">
                        <label class="control-label col-md-2" for="DocumentTypeID">Stav dokumentu</label>
                        <div class="col-md-10">
                            @Model.DocumentStateName

                        </div>
                    </div>*@

                <div class="row">
                    <label class="control-label col-md-2" for="DocumentAdminType">Typ správce dokumentu</label>
                    <div class="col-md-4">
                        @*@if (ViewBag.TypeModel.AdministratorID != 0)
                            {
                                <p>Z typu dokumentu: @Model.DocumentAdministrator</p>

                            }
                            else
                            {*@
                        @Html.DropDownListFor(m => m.AdministratorID, new SelectList(ViewBag.Administrators, "ID", "Value"), new { @class = "form-control", @placeholder = "Správce dokumentu" })
                        @Html.ValidationMessageFor(m => m.AdministratorID, "", new { @class = "text-danger", required = "required" })
                        @*}*@
                        <br />

                    </div>
                    <label class="control-label col-md-2" for="EndDate">Konec platnosti</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <label class="control-label col-md-2" for="Title">Anotace</label>
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.Annotation, new { @class = "form-control annotationArea", @placeholder = "Poznámka k dokumentu" })
                        @Html.ValidationMessageFor(model => model.Annotation, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Model.IssueNumber > 1)
                {
                    <div class="row">
                        <label class="control-label col-md-2" for="Title">Popis změny</label>
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.IssueChangeComment, new { @class = "form-control annotationArea", @placeholder = "Popis změny v tomto vydání" })
                            @Html.ValidationMessageFor(model => model.IssueChangeComment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

            </div>
            @* přílohy = soubory k rizenemu dokumentu*@
            <div id="tabs-3">

                <div class="row">
                    <label class="control-label col-md-4" for="Title">Přiřazené soubory k dokumentu</label>
                </div>

                @foreach (var item in @Model.FileItems)
                {
                    <div class="row">
                        <div class="col-md-2">
                            @item.Name
                        </div>
                        <div class="col-md-6">
                            @if (Model.DocumentStateCode == "New")
                            {
                                <a href="#" class="btn btn-default btn-sm removeFile" fileId="@item.ID">
                                    <span class="glyphicon glyphicon-remove"></span> Smazat
                                </a>
                            }
                            <a href="@System.Configuration.ConfigurationManager.AppSettings["AppRoot"]/Documents/GetFile?FileID=@item.ID&forceDownload=false" class="btn btn-default btn-sm downloadFile" fileId="@item.ID">
                                <span class="glyphicon glyphicon-download"></span> Otevřít
                            </a>
                            <a href="@System.Configuration.ConfigurationManager.AppSettings["AppRoot"]/Documents/GetFile?FileID=@item.ID&forceDownload=true" class="btn btn-default btn-sm downloadFile" fileId="@item.ID">
                                <span class="glyphicon glyphicon-download"></span> Stáhnout
                            </a>
                        </div>
                    </div>
                }

                @if (Model.DocumentStateCode == "New")
                {
                    <div class="row" style="margin-top:30px">
                        <label class="control-label col-md-4" for="Title">Přidat nové soubory</label>
                    </div>
                    <div class="row">
                        <div class="col-md-10">
                            <input type="file" name="file1" id="file1" value="Přidat soubor" class="form-control" />
                            <br />
                            <input type="file" name="file2" id="file2" value="Přidat soubor" class="form-control" />
                            <br />
                            <input type="file" name="file3" id="file3" value="Přidat soubor" class="form-control" />
                            @* <input type="file" name="file3" id="file3" value="Přidat soubor" class="btn btn-default" />*@
                        </div>
                    </div>
                }
            </div>

            @* rozdělovník- vyběr funkc a osob*@
            <div id="tabs-4">

                <div class="row">
                    @if (Model.DocumentStateCode == "New")
                    {

                        <div class="col-md-3">
                            <b>Pracovní pozice</b>
                        </div>
                    }
                    <div class="col-md-3 modra">
                        <b>Vybrané pozice</b>
                    </div>



                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-3">
                            <b>Osoby</b>
                        </div>
                    }
                    <div class="col-md-3 modra">
                        <b>Vybrané osoby </b>
                    </div>
                </div>

                <div class="row">
                    @if (Model.DocumentStateCode == "New")
                {
                        <div class="col-md-2 sedaPozadi">

                            @*<input type="text" id="JobPositionFilter" />*@
                            <select multiple name="AllJobPositions" id="AllJobPositions" class="categories form-control">
                                @if (Model.JobPositionIDs != null)
                                {
                                    foreach (JobPositionModel jobPosition in ((ICollection<JobPositionModel>)ViewBag.JobPositions).Where(jp => !Model.JobPositionIDs.Contains(jp.ID)).Select(jp => jp))
                                    {
                                        <option value="@jobPosition.ID">@jobPosition.Name</option>
                                    }
                                }
                                else
                                {
                                    foreach (JobPositionModel jobPosition in ((ICollection<JobPositionModel>)ViewBag.JobPositions).Select(jp => jp))
                                    {
                                        <option value="@jobPosition.ID">@jobPosition.Name</option>
                                    }
                                }

                            </select>

                        </div>
                        <div class="col-md-1" style="text-align: center">
                            <input type="button" id="addJobPositions" value=">" />
                            <input type="button" id="removeJobPositions" value="<" />
                        </div>
                    }
                    <div class="col-md-3">
                        @*<b>Vybrané pracovní pozice</b><br />*@
                        <select multiple name="JobPositionIDs" id="JobPositionIDs" class="categories  form-control">
                            @if (Model.JobPositionIDs != null)
                            {
                                foreach (JobPositionModel jobPosition in ((ICollection<JobPositionModel>)ViewBag.JobPositions).Where(jp => Model.JobPositionIDs.Contains(jp.ID)).Select(jp => jp))
                                {
                                    <option value="@jobPosition.ID">@jobPosition.Name</option>
                                }
                            }
                        </select>
                    </div>

                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-2 sedaPozadi">
                            @*<b>Osoby</b>*@

                            <select multiple name="AllUsers" id="AllUsers" class="categories form-control">
                                @if (@Model.Users != null)
                                {

                                    foreach (UserModel user in ((ICollection<UserModel>)ViewBag.Users)
                                        .Where(u => !@Model.Users.Select(us => us.ID).Contains(u.ID))
                                        .Select(u => u))
                                    {
                                        <option value="@user.ID">@user.LastName @user.FirstName</option>
                                    }

                                }
                                else
                                {
                                    foreach (UserModel user in ((ICollection<UserModel>)ViewBag.Users).Select(u => u))
                                    {
                                        <option value="@user.ID">@user.LastName @user.FirstName</option>
                                    }
                                }
                            </select>



                        </div>
                            <div class="col-md-1" style="text-align: center">
                                <input type="button" id="addUsers" value=">" />
                                <input type="button" id="removeUsers" value="<" />
                            </div>

                    }

                    <div class="col-md-3">
                        @*<b>Vybrané osoby</b>*@
                        <select multiple name="SelectedUsers" id="SelectedUsers" class="categories  form-control">
                            @if (@Model.Users != null)
                            {
                                foreach (var item in Model.Users)
                                {
                                    <option value="@item.ID">@item.LastName @item.FirstName</option>
                                }
                            }
                        </select>

                    </div>
                </div>

                @*Navrh rozdělovníku*@


                @if (Model.DocumentStateCode == "New")
                {
                    <div class="col-md-12">
                        <div class="row">
                            <p><strong>Návrh rozdělovníku</strong></p>

                            <table class="table" style="margin-top:10px" id="AllUsersJob">
                                @*<tr style="background-color:aliceblue">*@
                                <tr class="tableHlavicka">
                                    <th>
                                        Jméno
                                        <a href="#" class="GetUsersJob_SortBy" sortBy="GetUsersJob_NameA"><span class="glyphicon glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                                        <a href="#" class="GetUsersJob_SortBy" sortBy="GetUsersJob_NameD"><span class="glyphicon glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                                    </th>
                                    <th>
                                        Funkce
                                        <a href="#" class="GetUsersJob_SortBy" sortBy="GetUsersJob_JobPostionA"><span class="glyphicon glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                                        <a href="#" class="GetUsersJob_SortBy" sortBy="GetUsersJob_JobPostionD"><span class="glyphicon glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                                    </th>

                                </tr>
                            </table>

                        </div>


                    </div>
                }

                @if (Model.DocumentStateCode != "New")
                {
                    <div class="col-md-12">
                        <div class="row">
                            <p><strong>Rozdělovník</strong></p>

                            <table class="table" style="margin-top:10px" id="AllReadConfirms">
                                @*<tr style="background-color:aliceblue">*@
                                <tr class="tableHlavicka">
                                    <th>
                                        Jméno
                                        <a href="#" class="GetReadConfirms_SortBy" sortBy="GetReadConfirms_NameA"><span class="glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                                        <a href="#" class="GetReadConfirms_SortBy" sortBy="GetReadConfirms_NameD"><span class="glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                                    </th>
                                    <th>
                                        Funkce
                                        <a href="#" class="GetReadConfirms_SortBy" sortBy="GetReadConfirms_JobPostionA"><span class="glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                                        <a href="#" class="GetReadConfirms_SortBy" sortBy="GetReadConfirms_JobPostionD"><span class="glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                                    </th>
                                    <th>
                                        Přiřazeno
                                        <a href="#" class="GetReadConfirms_SortBy" sortBy="GetReadConfirms_CreatedA"><span class="glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                                        <a href="#" class="GetReadConfirms_SortBy" sortBy="GetReadConfirms_CreatedD"><span class="glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                                    </th>
                                    <th>
                                        Seznámeno
                                        <a href="#" class="GetReadConfirms_SortBy" sortBy="GetReadConfirms_ReadDateA"><span class="glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                                        <a href="#" class="GetReadConfirms_SortBy" sortBy="GetReadConfirms_ReadDateD"><span class="glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                                    </th>

                                </tr>
                            </table>
                        </div>
                    </div>
                }


                @*záznamy o seznámení - původní - už se nepoužívá možno vymazat*@
                <div>
                    @*<p></p>
                        <b>Záznamy seznámení</b>
                        <div class="row">
                            <div class="col-md-10">
                                @{ bool existAsUserReader = false; }
                                @if (Model.UsersInDocument != null && Model.UsersInDocument.AllUsers != null)
                                {
                                    foreach (var item in @Model.UsersInDocument.AllUsers.OrderBy(au => au.LastName).Select(au => au))
                                    {
                                        existAsUserReader = false;
                                        if (Model.UsersInDocument.UsersRead != null)
                                        {

                                            foreach (var itemUR in @Model.UsersInDocument.UsersRead)
                                            {
                                                if (itemUR.User.ID == item.ID)
                                                {
                                                    existAsUserReader = true;

                                                    <div class="row">
                                                        <div class="col-md-2">
                                                            @itemUR.User.FirstName
                                                        </div>
                                                        <div class="col-md-2">
                                                            @itemUR.User.LastName

                                                        </div>
                                                        <div class="col-md-2">
                                                            @itemUR.DateRead


                                                        </div>
                                                    </div>
                                                }


                                            }

                                        }
                                        if (existAsUserReader == false)
                                        {

                                            <div class="row">
                                                <div class="col-md-2">
                                                    @item.FirstName
                                                </div>
                                                <div class="col-md-2">
                                                    @item.LastName
                                                </div>
                                                <div class="col-md-2">

                                                </div>
                                            </div>
                                        }

                                    }
                                }
                            </div>
                        </div>*@

                    @*<div class="row">
                            <div class="col-md-8">
                                <b>Přiřazení uživatelé k dokumentu</b><br />
                                <select multiple name="SelectedUsers" id="SelectedUsers" class="selectBoxes">
                                    @if (@Model.Users != null)
                                    {
                                        foreach (var item in @Model.Users)
                                        {
                                            <option value="@item.ID">@item.LastName  @item.FirstName</option>
                                        }
                                    }
                                </select>

                            </div>
                            <div class="col-md-4">

                                <input type="button" value="Odebrat osoby z dokumentu" id="RemoveSelectedUsers" class="btn btn-default" />
                            </div>
                        </div>*@
                    @* </div>
                        <div>*@
                    @*<div class="row">
                                      <div class="col-md-8">
                                          <div class="ui-widget">
                                              <label for="filter">Filtr: </label>
                                              <input id="filter">
                                              <label for="jobPosition">Pracovní pozice: </label>
                                              <select id="jobPosition">
                                                  <option value="0">Všechny</option>
                                                  @foreach (var item in ViewBag.JobPositions)
                                                  {
                                                  <option value="@item.ID">@item.Name</option>
                                                  }
                                              </select>
                                          </div>

                                          <select multiple name="FilteredUsers" id="FilteredUsers" class="selectBoxes"></select>





                        </div>
                                <div class="col-md-4">
                                    <input type="button" value="Přiřadit osoby k dokumentu" id="AddUserToList" class="btn btn-default" />
                                </div>
                        </div>*@
                </div>
            </div>

            @*kategorie*@
            <div id="tabs-5">
                @*projekty a střediska (1. řádek nadpisy 2 pole)*@
                <div class="row">
                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-3">
                            <b>Projekty</b>
                        </div>
                    }
                    <div class="col-md-3 modra">
                        <b>Vybrané projekty</b>
                    </div>



                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-3">
                            <b>Střediska</b>
                        </div>
                    }
                    <div class="col-md-3 modra">
                        <b>Vybraná střediska </b>
                    </div>
                </div>

                <div class="row">
                    @if (Model.DocumentStateCode == "New")
                    { <div class="col-md-2">
                        @*<input type="text" id="projectsFilter" />*@
                        <select multiple name="AllProjects" id="AllProjects" class="categories form-control">
                            @if (Model.SelectedProjectsID != null)
                            {
                                foreach (ProjectModel project in ((ICollection<ProjectModel>)ViewBag.Projects).Where(p => !Model.SelectedProjectsID.Contains(p.ID)).Select(p => p))
                                {
                                    <option value="@project.ID">@project.Name</option>
                                }
                            }
                            else
                            {
                                foreach (ProjectModel project in ((ICollection<ProjectModel>)ViewBag.Projects).Select(p => p))
                                {
                                    <option value="@project.ID">@project.Name</option>
                                }
                            }
                        </select>
                    </div>

                            <div class="col-md-1" style="text-align: center">
                                <input type="button" id="addProjects" value=">" />
                                <input type="button" id="removeProjects" value="<" />
                            </div>
                    }

                    <div class="col-md-3">

                        <select multiple name="SelectedProjectsID" id="SelectedProjects" class="categories  form-control">
                            @if (Model.SelectedProjectsID != null)
                            {
                                foreach (ProjectModel project in ((ICollection<ProjectModel>)ViewBag.Projects).Where(p => Model.SelectedProjectsID.Contains(p.ID)).Select(p => p))
                                {
                                    <option value="@project.ID">@project.Name</option>
                                }
                            }
                        </select>
                    </div>

                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-2  sedaPozadi">

                            @*<input type="text" id="divisionsFilter" />*@
                            <select multiple name="AllDivisions" id="AllDivisions" class="categories  form-control">
                                @if (Model.SelectedDivisionsID != null)
                                {
                                    foreach (DivisionModel division in ((ICollection<DivisionModel>)ViewBag.Divisions).Where(p => !Model.SelectedDivisionsID.Contains(p.ID)).Select(p => p))
                                    {
                                        <option value="@division.ID">@division.Name</option>
                                    }
                                }
                                else
                                {
                                    foreach (DivisionModel division in ((ICollection<DivisionModel>)ViewBag.Divisions).Select(p => p))
                                    {
                                        <option value="@division.ID">@division.Name</option>
                                    }
                                }
                            </select>
                        </div>

                        <div class="col-md-1" style="text-align: center">
                            <input type="button" id="addDivisions" value=">" />
                            <input type="button" id="removeDivisions" value="<" />
                        </div>
                    }

                    <div class="col-md-3">

                        <select multiple name="SelectedDivisionsID" id="SelectedDivisions" class="categories  form-control">
                            @if (Model.SelectedDivisionsID != null)
                            {
                                foreach (DivisionModel division in ((ICollection<DivisionModel>)ViewBag.Divisions).Where(p => Model.SelectedDivisionsID.Contains(p.ID)).Select(p => p))
                                {
                                    <option value="@division.ID">@division.Name</option>
                                }
                            }
                            }
                        </select>

                    </div>
                </div>

                @*systémy a lokality (1. řádek nadpisy 2 pole)*@
                <div class="row">

                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-3">
                            <b>Systémy</b>
                        </div>
                    }
                    <div class="col-md-3 modra">
                        <b>Vybrané systémy</b>
                    </div>



                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-3">
                            <b>Lokality</b>
                        </div>
                    }
                    <div class="col-md-3 modra">
                        <b>Vybrané lokality</b>
                    </div>
                </div>

                <div class="row">
                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-2 sedaPozadi">

                            @*<input type="text" id="appSystemsFilter" />*@
                            <select multiple name="AllAppSystems" id="AllAppSystems" class="categories  form-control">
                                @if (Model.SelectedAppSystemsID != null)
                                {
                                    foreach (AppSystemModel appSystem in ((ICollection<AppSystemModel>)ViewBag.AppSystems).Where(p => !Model.SelectedAppSystemsID.Contains(p.ID)).Select(aps => aps))
                                    {
                                        <option value="@appSystem.ID">@appSystem.Name</option>
                                    }
                                }
                                else
                                {
                                    foreach (AppSystemModel appSystem in ((ICollection<AppSystemModel>)ViewBag.AppSystems).Select(aps => aps))
                                    {
                                        <option value="@appSystem.ID">@appSystem.Name</option>
                                    }
                                }

                            </select>
                        </div>

                        <div class="col-md-1" style="text-align: center">
                            <input type="button" id="addAppSystems" value=">" />
                            <input type="button" id="removeAppSystems" value="<" />
                        </div>

                    }
                    <div class="col-md-3">
                        <select multiple name="SelectedAppSystemsID" id="SelectedAppSystems" class="categories  form-control">
                            @if (Model.SelectedAppSystemsID != null)
                            {
                                foreach (AppSystemModel appSystem in ((ICollection<AppSystemModel>)ViewBag.AppSystems).Where(p => Model.SelectedAppSystemsID.Contains(p.ID)).Select(p => p))
                                {
                                    <option value="@appSystem.ID">@appSystem.Name</option>
                                }
                            }
                        </select>
                    </div>
                    @if (Model.DocumentStateCode == "New")
                    {
                        <div class="col-md-2 sedaPozadi">

                            @*<input type="text" id="workplacesFilter" />*@
                            <select multiple name="AllWorkplaces" id="AllWorkplaces" class="categories  form-control">
                                @if (Model.SelectedWorkplacesID != null)
                                {
                                    foreach (WorkplaceModel workplace in ((ICollection<WorkplaceModel>)ViewBag.Workplaces).Where(p => !Model.SelectedWorkplacesID.Contains(p.ID)).Select(aps => aps))
                                    {
                                        <option value="@workplace.ID"> @workplace.Name</option>
                                    }
                                }
                                else
                                {
                                    foreach (WorkplaceModel workplace in ((ICollection<WorkplaceModel>)ViewBag.Workplaces).Select(aps => aps))
                                    {
                                        <option value="@workplace.ID">@workplace.Name</option>
                                    }

                                }
                            </select>
                        </div>

                        <div class="col-md-1" style="text-align: center">

                            <input type="button" id="addWorkplaces" value=">" />
                            <input type="button" id="removeWorkplaces" value="<" />
                        </div>
                    }

                    <div class="col-md-3">

                        <select multiple name="SelectedWorkplacesID" id="SelectedWorkplaces" class="categories  form-control">
                            @if (Model.SelectedWorkplacesID != null)
                            {
                                foreach (WorkplaceModel workplace in ((ICollection<WorkplaceModel>)ViewBag.Workplaces).Where(p => Model.SelectedWorkplacesID.Contains(p.ID)).Select(p => p))
                                {
                                    <option value="@workplace.ID"> @workplace.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>

            </div>


            @*nutne zmeny*@
            <div id="tabs-7">
                <div class="row">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.ReviewNecessaryChangeComment)
                        <p style="white-space: pre-line">@Model.ReviewNecessaryChangeComment</p>
                        @*@Html.TextBoxFor(m => m.ReviewNecessaryChangeComment, new { @readonly = "readonly" })*@
                        @*@Html.EditorFor(m => m.ReviewNecessaryChangeComment, new { htmlAttributes = new { @readonly = "readonly" } })*@

                    </div>
                </div>
            </div>
            @*tabulka vsech souvisejicich vydani - zmeny *@
            <div id="tabs-8">

                <table class="table" style="margin-top:10px" id="AllIssue">
                    <tr class="tableHlavicka">
                        <th>Číslo</th>
                        <th>Název</th>
                        <th>Účinnost</th>
                        <th>Změny</th>
                        <th></th>
                    </tr>

                    @*<tr>
                        <th>
                            Číslo
                            <a href="#" class="GetDocuments_Edit_SortBy" sortBy="NumberA"><span class="glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                            <a href="#" class="GetDocuments_Edit_SortBy" sortBy="NumberD"><span class="glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                        </th>
                        <th>
                            Název
                            <a href="#" class="GetDocuments_Edit_SortBy" sortBy="NameA"><span class="glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                            <a href="#" class="GetDocuments_Edit_SortBy" sortBy="NameD"><span class="glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                        </th>

                        <th>
                            Účinnost
                            <a href="#" class="GetDocuments_Edit_SortBy" sortBy="EffeciencyDateA"><span class="glyphicon glyphicon-circle-arrow-up setSortByDefault"></span></a>
                            <a href="#" class="GetDocuments_Edit_SortBy" sortBy="EffeciencyDateD"><span class="glyphicon glyphicon-circle-arrow-down setSortByDefault"></span></a>
                        </th>
                        <th>
                            Změny
                        </th>
                        <th>
                        </th>*@

                </table>


            </div>
        </div>


        //tlačítka akcí = 1 řádek
        <input type="hidden" name="ID" id="ID" />
        <div style="clear:both;margin-bottom:10px"></div>
        <div class="row">
            <div class="col-md-12">
                <nav class="navbar navbar-btn">
                    <div class="container-fluid">
                        <ul class="nav navbar-nav">
                            <li style="padding-right:5px">
                                @*<button type="button" class="btn btn-danger navbar-btn" id="cancelChangesN">Zpět N</button>*@
                                <button type="button" class="btn btn-danger navbar-btn" id="cancelChanges">Zpět</button>
                            </li>
                            @if (Model.DocumentStateCode == "New")
                            {
                                if (UserRoles.IsAccess("SystemAdmin,SuperDocAdmin,documentadminid,documentauthorid"))
                                {
                                    <li style="padding-right:5px">

                                        <button type="button" class="btn btn-primary navbar-btn btnAction " id="saveDocument">Uložit</button>
                                    </li>

                                    <li style="padding-right:5px">

                                        <button type="button" class="btn btn-primary navbar-btn btnAction" id="registerDocument">Zaevidovat</button>
                                    </li>
                                }

                            }
                            else if (Model.DocumentStateCode == "Registered")
                            {

                                if (Model.Revision == "P")
                                {
                                    if (UserRoles.IsAccess("SystemAdmin,SuperDocAdmin,documentadminid"))
                                    {
                                        <li style="padding-right:5px">
                                            <button type="button" class="btn btn-primary navbar-btn btnAction" id="newVersion">Nové vydání</button>
                                        </li>
                                        <li style="padding-right:5px">
                                            <button class="btn btn-primary navbar-btn dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Přezkoumání<span class="caret"></span></button>
                                            <ul class="dropdown-menu">
                                                <li style="padding-right:5px">
                                                    <a href="#" class="btnAction" id="reviewNoAction"> Platný ve stávající formě</a>
                                                </li>
                                                <li style="padding-right:5px">
                                                    <a href="#" class="btnAction" id="reviewNecessaryChange"> Nutná změna</a>
                                                </li>
                                            </ul>
                                        </li>
                                    }
                                }
                            }

                            @if (UserRoles.IsAccess("SystemAdmin,SuperDocAdmin,documentadminid"))
                            {
                                if (Model.DocumentStateCode == "New" | Model.DocumentStateCode == "Registered")
                                {

                                    <li style="padding-right:5px">
                                        <button type="button" class="btn btn-primary navbar-btn btnAction" id="stornoDocument">Storno</button>
                                    </li>

                                }

                                if (Model.DocumentStateCode != "Archived")
                                {
                                    <li style="padding-right:5px">
                                        <button type="button" class="btn btn-primary navbar-btn btnAction" id="archivDocument">Archivace</button>
                                    </li>
                                }
                                else
                                {
                                    <li style="padding-right:5px">
                                        <button type="button" class="btn btn-primary navbar-btn btnAction" id="deArchivDocument">Dearchivace</button>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </nav>
            </div>
        </div>
    }
</div>

@*modal okno*@
<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalTitle">Titulek</h4>
            </div>
            <div class="modal-body">
                <p id="myModalP1">Zde napiste kdyz talcitko ANO</p>
                <p id="myModalP2" class="text-warning"><small>Zde napisště kdyz tlacitko ne</small></p>
                <textarea class="form-control" cols="15" id="myModalComment" name="myModalComment" placeholder="Napoveda pro pole" rows="2"></textarea>
            </div>
            <div class="modal-footer">
                <button ID="myModalClose" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button ID="myModalContinue" type="button" class="btn btn-primary">OK</button>
            </div>
        </div>
    </div>
</div>


